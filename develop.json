{"meta":{"generator":"0.12.1","format":30,"date":1717510477497},"classes":[{"name":"BaseClient","description":"The Base Client","extends":[[["EventEmitter"]]],"construct":{"name":"BaseClient","params":[{"name":"options","description":"The options to use","optional":true,"default":"{}","type":[[["defaultOptions"]]]}]},"props":[{"name":"options","description":"The options of the client.","scope":"instance","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":26,"file":"BaseClient.js","path":"src/client"}},{"name":"accessToken","description":"The access token which will be used to make requests to the Jellyfin API","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":32,"file":"BaseClient.js","path":"src/client"}},{"name":"serverId","description":"The server identifier","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":38,"file":"BaseClient.js","path":"src/client"}},{"name":"user","description":"The connected user of the client.","scope":"instance","nullable":true,"type":[[["User"]]],"meta":{"line":44,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"login","description":"Authenticate to the Jellyfin server\n\n<warn>The parameters should be kept private at all times.</warn>\n<info>You should use environment variables to keep it private.</info>\n\n<info>When authenticated, a {@link Client#ready} event is fired, you can also use promises like `then()` or `await` if you don't want to use events.</info>","scope":"instance","params":[{"name":"username","description":"The username of the user to authenticate","default":null,"nullable":true,"type":[[["string"]]]},{"name":"password","description":"The password of the user to authenticate","default":null,"nullable":true,"type":[[["string"]]]},{"name":"baseUrl","description":"The base URL of the Jellyfin server","default":null,"nullable":true,"type":[[["string"]]]}],"async":true,"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":59,"file":"BaseClient.js","path":"src/client"}},{"name":"logout","description":"Disconnects from the Jellyfin server\n\n<info>When disconnected, a {@link Client#disconnected} event is fired, you can also use promises like `then()` or `await` if you don't want to use events.</info>","scope":"instance","async":true,"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":95,"file":"BaseClient.js","path":"src/client"}},{"name":"apiReq","description":"Do an API request, this is not recommended to use","scope":"instance","params":[{"name":"path","description":"The path to request","type":[[["string"]]]},{"name":"method","description":"The HTTP method to use","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The data to send","optional":true,"default":null,"nullable":true,"type":[[["Object"]]]}],"async":true,"returns":[{"types":[[["Promise","<"],["Object",">"]]],"description":"A promise that resolves to the API response"}],"meta":{"line":120,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":14,"file":"BaseClient.js","path":"src/client"}},{"name":"Client","description":"Instantiates a new client. This is the entry point.","extends":[[["BaseClient"]]],"construct":{"name":"Client","params":[{"name":"options","description":"The options to use","optional":true,"default":"{}","type":[[["defaultOptions"]]]}]},"props":[{"name":"media","description":"The media manager","scope":"instance","type":[[["MediaManager"]]],"meta":{"line":30,"file":"Client.js","path":"src/client"}},{"name":"options","description":"The options of the client.","scope":"instance","readonly":true,"type":[[["defaultOptions"]]],"meta":{"line":26,"file":"BaseClient.js","path":"src/client"}},{"name":"accessToken","description":"The access token which will be used to make requests to the Jellyfin API","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":32,"file":"BaseClient.js","path":"src/client"}},{"name":"serverId","description":"The server identifier","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":38,"file":"BaseClient.js","path":"src/client"}},{"name":"user","description":"The connected user of the client.","scope":"instance","nullable":true,"type":[[["User"]]],"meta":{"line":44,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"login","description":"Authenticate to the Jellyfin server\n\n<warn>The parameters should be kept private at all times.</warn>\n<info>You should use environment variables to keep it private.</info>\n\n<info>When authenticated, a {@link Client#ready} event is fired, you can also use promises like `then()` or `await` if you don't want to use events.</info>","scope":"instance","inherits":"BaseClient#login","inherited":true,"params":[{"name":"username","description":"The username of the user to authenticate","default":null,"nullable":true,"type":[[["string"]]]},{"name":"password","description":"The password of the user to authenticate","default":null,"nullable":true,"type":[[["string"]]]},{"name":"baseUrl","description":"The base URL of the Jellyfin server","default":null,"nullable":true,"type":[[["string"]]]}],"async":true,"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":59,"file":"BaseClient.js","path":"src/client"}},{"name":"logout","description":"Disconnects from the Jellyfin server\n\n<info>When disconnected, a {@link Client#disconnected} event is fired, you can also use promises like `then()` or `await` if you don't want to use events.</info>","scope":"instance","inherits":"BaseClient#logout","inherited":true,"async":true,"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":95,"file":"BaseClient.js","path":"src/client"}},{"name":"apiReq","description":"Do an API request, this is not recommended to use","scope":"instance","inherits":"BaseClient#apiReq","inherited":true,"params":[{"name":"path","description":"The path to request","type":[[["string"]]]},{"name":"method","description":"The HTTP method to use","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The data to send","optional":true,"default":null,"nullable":true,"type":[[["Object"]]]}],"async":true,"returns":[{"types":[[["Promise","<"],["Object",">"]]],"description":"A promise that resolves to the API response"}],"meta":{"line":120,"file":"BaseClient.js","path":"src/client"}}],"events":[{"name":"ready","description":"Emitted when the client was authenticated successfully to the Jellyfin server.","meta":{"line":79,"file":"BaseClient.js","path":"src/client"}},{"name":"disconnected","description":"Emitted when the client was disconnected successfully to the Jellyfin server.","meta":{"line":103,"file":"BaseClient.js","path":"src/client"}},{"name":"apiRequest","description":"Emitted before every API request.\nThis event can emit several times for the same request, e.g. when hitting a rate limit.\n<info>This is an informational event that is emitted quite frequently,\nit is highly recommended to check `request.url` to filter the data.</info>","params":[{"name":"request","description":"The request that is about to be sent","type":[[["APIRequest"]]]}],"meta":{"line":41,"file":"APIRequest.js","path":"src/rest"}},{"name":"apiResponse","description":"Emitted after every API request has received a response.\nThis event does not necessarily correlate to completion of the request, e.g. when hitting a rate limit.\n<info>This is an informational event that is emitted quite frequently,\nit is highly recommended to check `request.url` to filter the data.</info>","params":[{"name":"request","description":"The request that triggered this response","type":[[["APIRequest"]]]},{"name":"response","description":"The response received from the API","type":[[["Response"]]]}],"meta":{"line":52,"file":"APIRequest.js","path":"src/rest"}}],"meta":{"line":11,"file":"Client.js","path":"src/client"}},{"name":"MediaManager","construct":{"name":"MediaManager","params":[{"name":"client","type":[[["Client"]]]}]},"props":[{"name":"client","description":"The client instance.","scope":"instance","type":[[["Client"]]],"meta":{"line":11,"file":"MediaManager.js","path":"src/managers"}}],"methods":[{"name":"listCollections","description":"Get the collections list","scope":"instance","async":true,"returns":[[[["Promise","<"],["Array","<"],["MediaCollection",">>"]]]],"meta":{"line":18,"file":"MediaManager.js","path":"src/managers"}}],"meta":{"line":6,"file":"MediaManager.js","path":"src/managers"}},{"name":"APIRequest","description":"APIRequest class","access":"private","construct":{"name":"APIRequest","params":[{"name":"client","description":"The client object","type":[[["BaseClient"]]]}]},"props":[{"name":"client","description":"The client that created this request","scope":"instance","readonly":true,"type":[[["BaseClient"]]],"meta":{"line":18,"file":"APIRequest.js","path":"src/rest"}}],"methods":[{"name":"do","description":"Makes a request to the API","scope":"instance","params":[{"name":"url","description":"The URL","type":[[["string"]]]},{"name":"method","description":"The method","optional":true,"default":"\"GET\"","type":[[["string"]]]},{"name":"body","description":"The body","optional":true,"default":null,"type":[[["Object"]]]}],"returns":[{"types":[[["Promise","<"],["Object",">"]]],"description":"The response"}],"meta":{"line":28,"file":"APIRequest.js","path":"src/rest"}}],"meta":{"line":8,"file":"APIRequest.js","path":"src/rest"}},{"name":"MediaCollection","construct":{"name":"MediaCollection","params":[{"name":"client","type":[[["Client"]]]},{"name":"data","type":[[["object"]]]}]},"props":[{"name":"client","description":"The client that instantiated this","scope":"instance","type":[[["Client"]]],"meta":{"line":14,"file":"MediaCollection.js","path":"src/structures"}},{"name":"MediaCollection","description":"The raw data","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":21,"file":"MediaCollection.js","path":"src/structures"}}],"meta":{"line":9,"file":"MediaCollection.js","path":"src/structures"}},{"name":"SessionInfo","description":"Represents a Session Info on Jellyfin","construct":{"name":"SessionInfo","params":[{"name":"client","type":[[["Client"]]]},{"name":"data","type":[[["object"]]]}]},"props":[{"name":"client","description":"The client that instantiated this","scope":"instance","type":[[["Client"]]],"meta":{"line":17,"file":"SessionInfo.js","path":"src/structures"}},{"name":"id","description":"The ID of the session","scope":"instance","type":[[["string"]]],"meta":{"line":31,"file":"SessionInfo.js","path":"src/structures"}},{"name":"userId","description":"The User ID of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":39,"file":"SessionInfo.js","path":"src/structures"}},{"name":"remoteEndpoint","description":"The Remote Endpoint IP Address","scope":"instance","type":[[["string"]]],"meta":{"line":47,"file":"SessionInfo.js","path":"src/structures"}},{"name":"userName","description":"The User Name of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":55,"file":"SessionInfo.js","path":"src/structures"}},{"name":"clientName","description":"The Client Name of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":63,"file":"SessionInfo.js","path":"src/structures"}},{"name":"deviceName","description":"The Device Name of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":71,"file":"SessionInfo.js","path":"src/structures"}},{"name":"hasCustomDeviceName","description":"Whether this has custom device name","scope":"instance","type":[[["boolean"]]],"meta":{"line":79,"file":"SessionInfo.js","path":"src/structures"}},{"name":"deviceId","description":"The Device Id of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":87,"file":"SessionInfo.js","path":"src/structures"}},{"name":"deviceVersion","description":"The Device Version of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":95,"file":"SessionInfo.js","path":"src/structures"}},{"name":"isActive","description":"Whether the session is active","scope":"instance","type":[[["boolean"]]],"meta":{"line":103,"file":"SessionInfo.js","path":"src/structures"}},{"name":"serverId","description":"The Server Id of the Session","scope":"instance","type":[[["string"]]],"meta":{"line":111,"file":"SessionInfo.js","path":"src/structures"}},{"name":"SessionInfo","description":"The raw data","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":24,"file":"SessionInfo.js","path":"src/structures"}}],"meta":{"line":6,"file":"SessionInfo.js","path":"src/structures"}},{"name":"User","description":"Represents a user on Jellyfin.","props":[{"name":"client","description":"The client that instantiated this","scope":"instance","type":[[["Client"]]],"meta":{"line":13,"file":"User.js","path":"src/structures"}},{"name":"name","description":"The name of the user","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":27,"file":"User.js","path":"src/structures"}},{"name":"serverId","description":"The server identifier","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":35,"file":"User.js","path":"src/structures"}},{"name":"serverName","description":"The server name","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":43,"file":"User.js","path":"src/structures"}},{"name":"id","description":"The identifier","scope":"instance","type":[[["string"]]],"meta":{"line":51,"file":"User.js","path":"src/structures"}},{"name":"primaryImageTag","description":"The primary Image Tag","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":59,"file":"User.js","path":"src/structures"}},{"name":"hasPassword","description":"Whether this instance has password.","scope":"instance","type":[[["boolean"]]],"meta":{"line":67,"file":"User.js","path":"src/structures"}},{"name":"hasConfiguredPassword","description":"Whether this instance has configured password.","scope":"instance","type":[[["boolean"]]],"meta":{"line":75,"file":"User.js","path":"src/structures"}},{"name":"hasConfiguredEasyPassword","description":"Whether this instance has configured easy password.","scope":"instance","type":[[["boolean"]]],"meta":{"line":83,"file":"User.js","path":"src/structures"}},{"name":"enableAutoLogin","description":"Whether async login is enabled or not.","scope":"instance","type":[[["boolean"]]],"meta":{"line":91,"file":"User.js","path":"src/structures"}},{"name":"lastLoginDate","description":"The last login date.","scope":"instance","nullable":true,"type":[[["Date"]]],"meta":{"line":99,"file":"User.js","path":"src/structures"}},{"name":"lastActivityDate","description":"The last activity date.","scope":"instance","nullable":true,"type":[[["Date"]]],"meta":{"line":107,"file":"User.js","path":"src/structures"}},{"name":"configuration","description":"The User Configuration","scope":"instance","type":[[["UserConfiguration"]]],"meta":{"line":115,"file":"User.js","path":"src/structures"}},{"name":"policy","description":"The User Policy","scope":"instance","type":[[["UserPolicy"]]],"meta":{"line":123,"file":"User.js","path":"src/structures"}},{"name":"primaryImageAspectRatio","description":"The aspect ratio of the primary image.","scope":"instance","nullable":true,"type":[[["number"]]],"meta":{"line":131,"file":"User.js","path":"src/structures"}},{"name":"User","description":"The raw data","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":20,"file":"User.js","path":"src/structures"}}],"meta":{"line":6,"file":"User.js","path":"src/structures"}},{"name":"UserConfiguration","description":"Represents the configuration of the user","props":[{"name":"user","description":"The User class that instantiated this","scope":"instance","type":[[["User"]]],"meta":{"line":146,"file":"User.js","path":"src/structures"}},{"name":"audioLanguagePreference","description":"The audio language preference.","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":160,"file":"User.js","path":"src/structures"}},{"name":"playDefaultAudioTrack","description":"Whether play default audio track.","scope":"instance","type":[[["boolean"]]],"meta":{"line":168,"file":"User.js","path":"src/structures"}},{"name":"subtitleLanguagePreference","description":"The subtitle language preference.","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":176,"file":"User.js","path":"src/structures"}},{"name":"displayMissingEpisodes","description":"Whether to display missing episodes.","scope":"instance","type":[[["boolean"]]],"meta":{"line":184,"file":"User.js","path":"src/structures"}},{"name":"groupedFolders","description":"A array of grouped folders.","scope":"instance","type":[[["Array","<"],["string",">"]]],"meta":{"line":192,"file":"User.js","path":"src/structures"}},{"name":"subtitleMode","description":"The subtitle playback mode.","scope":"instance","type":[[["SubtitleModes"]]],"meta":{"line":200,"file":"User.js","path":"src/structures"}},{"name":"displayCollectionsView","description":"Whether to display collections.","scope":"instance","type":[[["boolean"]]],"meta":{"line":208,"file":"User.js","path":"src/structures"}},{"name":"enableLocalPassword","description":"Whether to enable local password","scope":"instance","type":[[["boolean"]]],"meta":{"line":216,"file":"User.js","path":"src/structures"}},{"name":"orderedViews","description":"A array of ordered views.","scope":"instance","type":[[["Array","<"],["string",">"]]],"meta":{"line":224,"file":"User.js","path":"src/structures"}},{"name":"LatestItemsExcludes","description":"A array of latest items excludes.","scope":"instance","type":[[["Array","<"],["string",">"]]],"meta":{"line":232,"file":"User.js","path":"src/structures"}},{"name":"myMediaExcludes","description":"A array of my media excludes.","scope":"instance","type":[[["Array","<"],["string",">"]]],"meta":{"line":240,"file":"User.js","path":"src/structures"}},{"name":"hidePlayedInLatest","description":"Whether to hide played items in latest items.","scope":"instance","type":[[["boolean"]]],"meta":{"line":248,"file":"User.js","path":"src/structures"}},{"name":"rememberAudioSelections","description":"Whether to remember audio selections.","scope":"instance","type":[[["boolean"]]],"meta":{"line":256,"file":"User.js","path":"src/structures"}},{"name":"rememberSubtitleSelections","description":"Whether to remember subtitle selections.","scope":"instance","type":[[["boolean"]]],"meta":{"line":264,"file":"User.js","path":"src/structures"}},{"name":"enableNextEpisodeAutoPlay","description":"Whether to enable next episode after.","scope":"instance","type":[[["boolean"]]],"meta":{"line":272,"file":"User.js","path":"src/structures"}},{"name":"UserConfiguration","description":"The raw data","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":153,"file":"User.js","path":"src/structures"}}],"meta":{"line":139,"file":"User.js","path":"src/structures"}},{"name":"UserPolicy","description":"Represents the policy of the user","props":[{"name":"user","description":"The User class that instantiated this","scope":"instance","type":[[["User"]]],"meta":{"line":287,"file":"User.js","path":"src/structures"}},{"name":"isAdministrator","description":"Whether the user is an administrator of the server.","scope":"instance","type":[[["boolean"]]],"meta":{"line":301,"file":"User.js","path":"src/structures"}},{"name":"isHidden","description":"Whether the user is hidden on the server.","scope":"instance","type":[[["boolean"]]],"meta":{"line":309,"file":"User.js","path":"src/structures"}},{"name":"isDisabled","description":"Whether the user is disabled on the server.","scope":"instance","type":[[["boolean"]]],"meta":{"line":317,"file":"User.js","path":"src/structures"}},{"name":"maxParentalRating","description":"The max parental rating.","scope":"instance","nullable":true,"type":[[["number"]]],"meta":{"line":325,"file":"User.js","path":"src/structures"}},{"name":"blockedTags","description":"An array of blocked tags.","scope":"instance","type":[[["Array","<"],["string",">"]]],"meta":{"line":333,"file":"User.js","path":"src/structures"}},{"name":"enableUserPreferenceAccess","description":"Whether the user has access to user preferences.","scope":"instance","type":[[["boolean"]]],"meta":{"line":341,"file":"User.js","path":"src/structures"}},{"name":"accessSchedules","description":"Whether the user has access to user preferences.","scope":"instance","nullable":true,"type":[[["Array","<"],["AccessSchedules",">"]]],"meta":{"line":349,"file":"User.js","path":"src/structures"}},{"name":"blockUnratedItems","description":"An array of items to block to the user.","scope":"instance","nullable":true,"type":[[["Array","<"],["BlockUnratedItems",">"]]],"meta":{"line":357,"file":"User.js","path":"src/structures"}},{"name":"enableRemoteControlOfOtherUsers","description":"Whether the user has access to remote control of other users.","scope":"instance","type":[[["boolean"]]],"meta":{"line":365,"file":"User.js","path":"src/structures"}},{"name":"enableSharedDeviceControl","description":"Whether the user has access to control of shared devices.","scope":"instance","type":[[["boolean"]]],"meta":{"line":373,"file":"User.js","path":"src/structures"}},{"name":"enableRemoteAccess","description":"Whether the user has remote access.","scope":"instance","type":[[["boolean"]]],"meta":{"line":381,"file":"User.js","path":"src/structures"}},{"name":"enableLiveTvManagement","description":"Whether the user has access to manage Live TV.","scope":"instance","type":[[["boolean"]]],"meta":{"line":389,"file":"User.js","path":"src/structures"}},{"name":"enableLiveTvAccess","description":"Whether the user has access to Live TV.","scope":"instance","type":[[["boolean"]]],"meta":{"line":397,"file":"User.js","path":"src/structures"}},{"name":"enableMediaPlayback","description":"Whether the user has access to media playback.","scope":"instance","type":[[["boolean"]]],"meta":{"line":405,"file":"User.js","path":"src/structures"}},{"name":"enableAudioPlaybackTranscoding","description":"Whether the user has access to audio playback transcoding.","scope":"instance","type":[[["boolean"]]],"meta":{"line":413,"file":"User.js","path":"src/structures"}},{"name":"enableVideoPlaybackTranscoding","description":"Whether the user has access to video playback transcoding.","scope":"instance","type":[[["boolean"]]],"meta":{"line":421,"file":"User.js","path":"src/structures"}},{"name":"enablePlaybackRemuxing","description":"Whether the user has access to playback remuxing.","scope":"instance","type":[[["boolean"]]],"meta":{"line":429,"file":"User.js","path":"src/structures"}},{"name":"forceRemoteSourceTranscoding","description":"Whether the user has access to force remote source transcoding.","scope":"instance","type":[[["boolean"]]],"meta":{"line":437,"file":"User.js","path":"src/structures"}},{"name":"enableContentDeletion","description":"Whether the user has access to delete content.","scope":"instance","type":[[["boolean"]]],"meta":{"line":445,"file":"User.js","path":"src/structures"}},{"name":"enableContentDeletionFromFolders","description":"An array of folders where the user has access to delete content.","scope":"instance","nullable":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":453,"file":"User.js","path":"src/structures"}},{"name":"enableContentDownloading","description":"Whether the user has access to download content.","scope":"instance","type":[[["boolean"]]],"meta":{"line":461,"file":"User.js","path":"src/structures"}},{"name":"enableSyncTranscoding","description":"Whether the user has access to sync transcoding.","scope":"instance","type":[[["boolean"]]],"meta":{"line":469,"file":"User.js","path":"src/structures"}},{"name":"enableMediaConversion","description":"Whether the user has access to media conversion.","scope":"instance","type":[[["boolean"]]],"meta":{"line":477,"file":"User.js","path":"src/structures"}},{"name":"enabledDevices","description":"An array of devices where the user has access to.","scope":"instance","nullable":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":485,"file":"User.js","path":"src/structures"}},{"name":"enableAllDevices","description":"Whether the user has access to all devices.","scope":"instance","type":[[["boolean"]]],"meta":{"line":493,"file":"User.js","path":"src/structures"}},{"name":"enabledChannels","description":"An array of channels where the user has access to.","scope":"instance","nullable":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":501,"file":"User.js","path":"src/structures"}},{"name":"enableAllChannels","description":"Whether the user has access to all channels.","scope":"instance","type":[[["boolean"]]],"meta":{"line":509,"file":"User.js","path":"src/structures"}},{"name":"enabledFolders","description":"An array of folders where the user has access to.","scope":"instance","nullable":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":517,"file":"User.js","path":"src/structures"}},{"name":"enableAllFolders","description":"Whether the user has access to all folders.","scope":"instance","type":[[["boolean"]]],"meta":{"line":525,"file":"User.js","path":"src/structures"}},{"name":"invalidLoginAttemptCount","description":"The number of times the user has invalid login attempts.","scope":"instance","type":[[["number"]]],"meta":{"line":533,"file":"User.js","path":"src/structures"}},{"name":"loginAttemptsBeforeLockout","description":"The maximum number of the user has invalid login attempts before lockout.","scope":"instance","type":[[["number"]]],"meta":{"line":541,"file":"User.js","path":"src/structures"}},{"name":"maxActiveSessions","description":"The maximum number of active sessions of the user.","scope":"instance","type":[[["number"]]],"meta":{"line":549,"file":"User.js","path":"src/structures"}},{"name":"enablePublicSharing","description":"Whether the user has access to public sharing.","scope":"instance","type":[[["boolean"]]],"meta":{"line":557,"file":"User.js","path":"src/structures"}},{"name":"blockedMediaFolders","description":"An array of blocked media folders of the user.","scope":"instance","nullable":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":565,"file":"User.js","path":"src/structures"}},{"name":"blockedChannels","description":"An array of blocked channels of the user.","scope":"instance","nullable":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":573,"file":"User.js","path":"src/structures"}},{"name":"remoteClientBitrateLimit","description":"The limit number of the bitrate of the user.","scope":"instance","type":[[["number"]]],"meta":{"line":581,"file":"User.js","path":"src/structures"}},{"name":"authenticationProviderId","description":"The Id of the authentication provider of the user.","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":589,"file":"User.js","path":"src/structures"}},{"name":"passwordResetProviderId","description":"The Id of the password reset provider of the user.","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":597,"file":"User.js","path":"src/structures"}},{"name":"syncPlayAccess","description":"The access level of SyncPlay of the user.","scope":"instance","type":[[["SyncPlayAccess"]]],"meta":{"line":605,"file":"User.js","path":"src/structures"}},{"name":"UserPolicy","description":"The raw data","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":294,"file":"User.js","path":"src/structures"}}],"meta":{"line":280,"file":"User.js","path":"src/structures"}},{"name":"defaultOptions","description":"The default options.","construct":{"name":"defaultOptions","params":[{"name":"baseClient","type":[[["BaseClient"]]]}]},"props":[{"name":"baseUrl","description":"The default Jellyfin URL to use. It must contain the protocol. And should contain a subpath (ended with a slash), if there's one.\n\nIf present, this defaults to `process.env.JELLYFIN_URL` when instantiating the client","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":27,"file":"defaultOptions.js","path":"src/util"}},{"name":"username","description":"The Jellyfin Username to use.\nIf present, this defaults to `process.env.JELLYFIN_USERNAME` when instantiating the client","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":38,"file":"defaultOptions.js","path":"src/util"}},{"name":"password","description":"The Jellyfin Password to use.\nIf present, this defaults to `process.env.JELLYFIN_PASSWORD` when instantiating the client","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":49,"file":"defaultOptions.js","path":"src/util"}},{"name":"dev","description":"Whether is in dev mode (Uses more logging traces in the core).","scope":"instance","type":[[["boolean"]]],"meta":{"line":58,"file":"defaultOptions.js","path":"src/util"}},{"name":"clientInfo","description":"Client Info Options.","scope":"instance","type":[[["defaultOptionsClientInfo"]]],"meta":{"line":64,"file":"defaultOptions.js","path":"src/util"}},{"name":"deviceInfo","description":"Device Info Options.","scope":"instance","type":[[["defaultOptionsDeviceInfo"]]],"meta":{"line":70,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptions","description":"The base client instance.","scope":"static","access":"private","type":[[["BaseClient"]]],"meta":{"line":18,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":9,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsClientInfo","construct":{"name":"defaultOptionsClientInfo","params":[{"name":"defaultOptions","type":[[["defaultOptions"]]]}]},"props":[{"name":"name","description":"The default Client Name to use.\nIf present, this defaults to `process.env.JELLYFIN_CLIENT_NAME` when instantiating the client","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":91,"file":"defaultOptions.js","path":"src/util"}},{"name":"version","description":"The default Client Version to use.\nIf present, this defaults to `process.env.JELLYFIN_CLIENT_VERSION` when instantiating the client","scope":"instance","nullable":true,"type":[[["string"]]],"meta":{"line":109,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsClientInfo","description":"Default options.","scope":"static","access":"private","type":[[["defaultOptions"]]],"meta":{"line":83,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":77,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsDeviceInfo","construct":{"name":"defaultOptionsDeviceInfo","params":[{"name":"defaultOptions","type":[[["defaultOptions"]]]}]},"props":[{"name":"name","description":"The default Client Name to use.\nIf present, this defaults to `process.env.JELLYFIN_CLIENT_NAME` when instantiating the client,\nelse this uses \"node-jellyfin\"","scope":"instance","type":[[["string"]]],"meta":{"line":141,"file":"defaultOptions.js","path":"src/util"}},{"name":"id","description":"The default Device ID to use.\nIf present, this defaults to `process.env.JELLYFIN_DEVICE_ID` when instantiating the client.\nIf not, uses the generated UUID used in the postinstall script. If the UUID is not present, it generates a random one.","scope":"instance","type":[[["string"]]],"meta":{"line":153,"file":"defaultOptions.js","path":"src/util"}},{"name":"defaultOptionsDeviceInfo","description":"Default options.","scope":"static","access":"private","type":[[["defaultOptions"]]],"meta":{"line":132,"file":"defaultOptions.js","path":"src/util"}}],"meta":{"line":126,"file":"defaultOptions.js","path":"src/util"}}],"functions":[{"name":"mergeDefault","description":"Sets default properties on an object that aren't already specified.","scope":"global","access":"private","params":[{"name":"def","description":"Default properties","type":[[["Object"]]]},{"name":"given","description":"Object to assign defaults to","type":[[["Object"]]]}],"returns":[[[["Object"]]]],"meta":{"line":8,"file":"Util.js","path":"src/util"}},{"name":"createEnum","description":"Create an enum from a list of strings.","scope":"global","access":"private","params":[{"name":"keys","type":[[["Array","<"],["string",">"]]]}],"returns":[[[["Object"]]]],"meta":{"line":26,"file":"Util.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"SubtitleModes","description":"All available subtitle playback modes.\n* `Default`\n* `Always`\n* `OnlyForced`\n* `None`\n* `Smart`","type":[[["\"Default\""]],[["\"Always\""]],[["\"OnlyForced\""]],[["\"None\""]],[["\"Smart\""]]],"meta":{"line":612,"file":"User.js","path":"src/structures"}},{"name":"AccessSchedules","type":[[["Object"]]],"props":[{"name":"Id","description":"The id of this instance.","type":[[["number"]]]},{"name":"UserId","description":"The id of the associated user.","type":[[["string"]]]},{"name":"DayOfWeek","description":"The day of week.","type":[[["\"Sunday\""]],[["\"Monday\""]],[["\"Tuesday\""]],[["\"Wednesday\""]],[["\"Thursday\""]],[["\"Friday\""]],[["\"Saturday\""]],[["\"Everyday\""]],[["\"Weekday\""]],[["\"Weekend\""]]]},{"name":"StartHour","description":"The start hour.","type":[[["number"]]]},{"name":"EndHour","description":"The end hour.","type":[[["number"]]]}],"meta":{"line":622,"file":"User.js","path":"src/structures"}},{"name":"BlockUnratedItems","description":"All available unrated items to block.\n* `Movie`\n* `Trailer`\n* `Series`\n* `Music`\n* `Book`\n* `LiveTvChannel`\n* `LiveTvProgram`\n* `ChannelContent`\n* `Other`","type":[[["\"Movie\""]],[["\"Trailer\""]],[["\"Series\""]],[["\"Music\""]],[["\"Book\""]],[["\"LiveTvChannel\""]],[["\"LiveTvProgram\""]],[["\"ChannelContent\""]],[["\"Other\""]]],"meta":{"line":631,"file":"User.js","path":"src/structures"}},{"name":"SyncPlayAccess","description":"All available SyncPlay access levels.\n* `CreateAndJoinGroups`\n* `JoinGroups`\n* `None`","type":[[["\"CreateAndJoinGroups\""]],[["\"JoinGroups\""]],[["\"None\""]]],"meta":{"line":645,"file":"User.js","path":"src/structures"}}],"externals":[],"custom":{}}